{"version":3,"file":"main.ff4f894e9a58ec8968d7.bundle.js","sources":["webpack:///./src/Grid/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport './Grid.scss';\n\nconst Grid = ({ children, isBordered, columnCount, isCentered, rowGap, mobileRowGap, colGap, className  }) => (\n    <div \n        className={`\n            k-grid \n            k-grid--${ columnCount } \n            ${ className }\n            ${ isCentered ? 'k-grid--center' : '' }\n            ${ isBordered ? 'k-grid--bordered' : '' }\n            ${ colGap ? 'k-grid-col-gap--' + colGap : '' }\n            ${ rowGap ? 'k-grid-row-gap--' + rowGap : '' }\n            ${ mobileRowGap ? 'k-grid-row-gap-sm--' + mobileRowGap : '' }\n        `}\n    >\n        { children }\n    </div>\n);\n\nGrid.defaultProps = {\n    isBordered: false,\n    isCentered: false,\n    columnCount: 3\n}\n\nGrid.propTypes = {\n    /** Items to wrap in Grid **/\n    children: PropTypes.arrayOf(PropTypes.element).isRequired,\n    /** Grid divides children with slashes **/\n    isBordered: PropTypes.bool,\n    /** Grid should center it's content **/\n    isCentered: PropTypes.bool,\n    /** Number of columns in the grid **/\n    columnCount: PropTypes.string.isRequired,\n    /** Size of row gap **/\n    rowGap: PropTypes.string,\n    /** Size of column gap **/\n    colGap: PropTypes.string,\n    /** Size of row gap on small devices **/\n    mobileRowGap: PropTypes.string,\n    /** Optional classes to pass to grid element **/\n    className: PropTypes.string\n}\n\nexport default Grid;"],"mappings":"AACA","sourceRoot":""}